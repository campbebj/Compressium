buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def ENV = System.getenv()
def buildNumber = ENV.BUILD_NUMBER ? "${ENV.BUILD_NUMBER}" : "custom"
version = "${mod_version}." + buildNumber
group = 'me.dinnerbeef.compressium'
archivesBaseName = "Compressium-${minecraft_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

sourceSets {
    main {
        resources {
            srcDirs "src/generated/resources"
            //But exclude the cache of the generated data from what gets built
            exclude '.cache'
        }
    }
}

task copyConfig(type: Copy) {
    from 'src/main/config'
    into 'run/config'
}
minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        data {

            workingDirectory project.file('run')

            copy {
                from 'src/main/config'
                into 'run/config'
            }

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'compressium', '--all', '--output', file('src/generated/resources/'),"--existing","\"" + sourceSets.main.resources.srcDirs[0] + "\""

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${forge_version}"
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "examplemod",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}