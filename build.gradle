buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }

}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def ENV = System.getenv()
def buildNumber = ENV.BUILD_NUMBER ? "${ENV.BUILD_NUMBER}" : "custom"
version = "${mod_version}." + buildNumber
group = 'me.dinnerbeef.compressium'
archivesBaseName = "Compressium-${minecraft_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    runs {
        client {
            workingDirectory project.file('run')
            mods {
                compressium {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            mods {
                compressium {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'compressium', '--all', '--output', file('src/generated/resources/')

            mods {
                compressium {
                    source sourceSets.main
                }
            }
        }
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation('cpw.mods:securejarhandler') { version { strictly '0.9.45' } }
}
jar {
    manifest {
        attributes([
                "Specification-Title"     : "compressium",
                "Specification-Vendor"    : "",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}